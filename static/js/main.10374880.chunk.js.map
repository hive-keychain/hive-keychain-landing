{"version":3,"sources":["components/buttons/navbarButton.js","utils/formatter.js","containers/header.js","containers/footer.js","containers/sections/section.js","containers/sections/carouselSection.js","components/memberPanel.js","components/carousel/customCarousel.js","containers/content.js","components/banner.js","containers/App.js","serviceWorker.js","index.js"],"names":["NavbarButton","text","color1","color2","href","float","itemVisible","onClick","active","large","children","id","buttonStyle","root","fontSize","transition","WebkitTransition","border","backgroundColor","color","fontWeight","display","CustomizedButton","withStyles","Button","tagFromTitle","title","replace","toLowerCase","width","window","innerWidth","anchorStyle","textDecoration","textTransform","fontFamily","padding","styleNavBar","zIndex","background","position","paddingTop","paddingBottom","styleNavBarSticky","top","boxShadow","getHomeSubMenu","navItems","activePage","setSubMenu","activeSubElement","Object","keys","map","section","i","Grid","style","paddingLeft","item","xs","sm","md","lg","offset","Formatter","sectionTitle","closeMenuButton","document","getElementById","click","closeMenu","Header","props","page","setPage","subMenu","isMainPage","Data","state","sticky","handleScroll","bind","currentItems","this","sppNavItems","rankingsNavItems","banner","parseInt","height","pageYOffset","setState","filter","k","undefined","minDiff","currentSection","length","offsetTop","diff","Math","abs","prevProps","addEventListener","menuOpenButton","Dehaze","menuCloseButton","changeMenuOn","largeMenuClassName","smallMenuClassName","menu","container","direction","justify","alignItems","React","Component","connect","nav","dispatch","type","payload","minHeight","textAlign","paddingRight","styleText","marginLeft","rightContainer","justifyContent","Footer","className","target","rel","src","alt","marginRight","verticalAlign","Section","tag","marginBottom","styled","margin","spacing","titleStyle","CarouselSection","imgStyle","maxHeight","borderRadius","nameStyle","usernameStyle","positionStyle","MemberPanel","name","username","Parser","ArrowButton","CustomCarousel","nbElem","autoPlay","selectedItem","sizeElement","selectedFeature","Carousel","createRef","Hidden","only","variant","aria-label","current","slidePrev","KeyboardArrowLeft","dotsDisabled","stopAutoPlayOnHover","duration","infinite","autoPlayInterval","startIndex","responsive","0","items","1350","buttonsDisabled","ref","slideNext","KeyboardArrowRight","styleIconBrowser","styleContactUsText","activeFeature","data","why","font","browsers","browser","url","icon","members","description","cursor","Banner","styles","transform","maxWidth","App","content","Boolean","location","hostname","match","WebFont","load","google","families","store","createStore","combineReducers","action","applyMiddleware","logger","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10374880.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core/\";\n\n// Create navbar button\n// onclick method, colors and margin are passed as props\nconst NavbarButton = ({\n  text,\n  color1,\n  color2,\n  href,\n  float,\n  itemVisible,\n  onClick,\n  large,\n  active,\n  children,\n  id,\n}) => {\n  const buttonStyle = {\n    root: {\n      fontSize: \"large\",\n      transition: \"1s\",\n      WebkitTransition: \"1s\" /* Safari 3.1 to 6.0 */,\n      float: float,\n      border: \"none\",\n      backgroundColor: color1,\n      color: active ? color2 : \"lightgrey\",\n      fontWeight: active ? \"bold\" : \"inherit\",\n      display: itemVisible ? \"block !important\" : \"none !important\",\n      \"&:hover\": {\n        backgroundColor: color2,\n        color: color1,\n      },\n    },\n  };\n  const CustomizedButton = withStyles(buttonStyle)(Button);\n  return (\n    <CustomizedButton id={id} href={href} onClick={onClick}>\n      {children}\n      {text}\n    </CustomizedButton>\n  );\n};\n\nexport default NavbarButton;\n","/**\n * Function used to get a tag from a title by removing spaces and adding - instead\n * @param title : title to change\n */\nexport function tagFromTitle(title) {\n  return title.replace(/\\s+/g, \"-\").toLowerCase();\n}\n\n/**\n * Function used to add comas in a long number\n * @param x : Number\n */\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core/\";\nimport NavbarButton from \"../components/buttons/navbarButton\";\nimport \"../css/containers/header.css\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport * as Data from \"../jsons/data.json\";\nimport * as Formatter from \"../utils/formatter\";\nimport { connect } from \"react-redux\";\nimport ResponsiveMenu from \"react-responsive-navbar\";\nimport { Dehaze } from \"@material-ui/icons\";\n\n// Inline style for anchors\n\nconst width = window.innerWidth;\nconst anchorStyle = {\n  textDecoration: \"none\",\n  textTransform: \"uppercase\",\n  color: \"white\",\n  fontSize: \"0.875rem\",\n  fontWeight: \"500\",\n  fontFamily: \"Roboto\",\n  padding: \"0.25rem\",\n};\n\n// Inline style for navbar\nconst styleNavBar = {\n  zIndex: 1,\n  background: \"black\",\n  color: \"white\",\n  position: \"relative\",\n  width: \"100%\",\n  paddingTop: width > 600 ? \"0.25rem\" : \"0.1rem\",\n  paddingBottom: width > 600 ? \"0.25rem\" : \"0.1rem\",\n};\n\n// Inline style for sticky navbar\nconst styleNavBarSticky = {\n  zIndex: 1,\n  position: \"fixed\",\n  top: 0,\n  background: \"black\",\n  width: \"100%\",\n  paddingTop: width > 600 ? \"0.25rem\" : \"0.1rem\",\n  paddingBottom: width > 600 ? \"0.25rem\" : \"0.1rem\",\n  boxShadow:\n    \"0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)\",\n};\n\n// Function use to close menu on click\n// This function is called on click on navItem\nconst closeMenu = () => {\n  // Get element\n  const closeMenuButton = document.getElementById(\"close-menu-button\");\n  // If it's open close it\n  if (closeMenuButton !== null) closeMenuButton.click();\n};\n\n// Create Sub Menu for home. Only appears if Home page is selected\nconst getHomeSubMenu = (navItems, activePage, setSubMenu, activeSubElement) => {\n  if (activePage === \"main\") {\n    // Loop on navItems\n    return Object.keys(navItems).map((section, i) => (\n      <Grid\n        style={{\n          paddingLeft: 50,\n          paddingTop: width > 600 ? 15 : 1,\n          paddingBottom: width > 600 ? 15 : 1,\n          fontWeight: \"bold\",\n        }}\n        item\n        xs={12}\n        sm={12}\n        md={12}\n        lg=\"auto\"\n        key={i}\n      >\n        <AnchorLink\n          offset={() => 100}\n          href={`#${Formatter.tagFromTitle(navItems[section].sectionTitle)}`}\n          style={anchorStyle}\n        >\n          <NavbarButton\n            color1=\"black\"\n            color2=\"white\"\n            style={{ fontWeight: \"bold\" }}\n            text={navItems[section].sectionTitle}\n            float=\"left\"\n            itemVisible={activePage === \"main\"}\n            active={\n              Formatter.tagFromTitle(navItems[section].sectionTitle) ===\n              activeSubElement\n            }\n            onClick={() => {\n              setSubMenu(\n                `${Formatter.tagFromTitle(navItems[section].sectionTitle)}`\n              );\n              closeMenu();\n            }}\n          />\n        </AnchorLink>\n      </Grid>\n    ));\n  }\n};\n\n// Create component Header\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    // Init props\n    this.page = props.page;\n    this.setPage = props.setPage;\n    this.setSubMenu = props.setSubMenu;\n    this.subMenu = props.subMenu;\n\n    this.isMainPage = this.page === \"main\";\n    // Get data from Jsons\n    this.navItems = Data.default;\n\n    // Set initial local state\n    this.state = {\n      activePage: this.page,\n      activeSubElement: this.subMenu,\n      sticky: false,\n    };\n    // Bind handleScroll function\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  // Function used to handle scroll and change selected item in navbar on scroll\n  handleScroll() {\n    let currentItems;\n    // Set currentItems\n    if (this.state.activePage === \"main\") currentItems = this.navItems;\n    else if (this.state.activePage === \"spp\") currentItems = this.sppNavItems;\n    else if (this.state.activePage === \"rankings\")\n      currentItems = this.rankingsNavItems;\n\n    // Get banner\n    const banner = document.getElementById(\"banner\");\n    const sticky = parseInt(banner.style.height);\n\n    // if offset of the window > banner's height set the banner sticky\n    if (window.pageYOffset >= sticky) {\n      this.setState({ sticky: true });\n    } else {\n      this.setState({ sticky: false });\n    }\n\n    // Get the titles of every section on the current page\n    let keys = Object.keys(currentItems).filter(\n      (k) => currentItems[k].sectionTitle !== undefined\n    );\n    // Find the section that is the closest to the top of the page\n    let minDiff = window.pageYOffset;\n    let currentSection = \"\";\n    for (let i = keys.length - 1; i >= 0; i--) {\n      const htmlItem = document.getElementById(\n        `${Formatter.tagFromTitle(currentItems[keys[i]].sectionTitle)}`\n      );\n      const offset = htmlItem.offsetTop;\n      const diff = Math.abs(window.pageYOffset - offset);\n      if (minDiff > diff) {\n        minDiff = diff;\n        currentSection = Formatter.tagFromTitle(\n          currentItems[keys[i]].sectionTitle\n        );\n      }\n    }\n    // Set active section\n    this.setState({\n      activeSubElement: currentSection,\n    });\n  }\n\n  // When component update\n  componentDidUpdate(prevProps) {\n    // If props don't change don't set the state\n    if (prevProps.page !== this.props.page)\n      this.setState({ activePage: this.props.page });\n    if (prevProps.subMenu !== this.props.subMenu)\n      this.setState({ activeSubElement: this.props.subMenu });\n  }\n\n  // When component is ready add Event Listener on scroll\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  //Render header\n  render() {\n    return (\n      <div\n        id=\"navbar\"\n        style={this.state.sticky ? styleNavBarSticky : styleNavBar}\n      >\n        <ResponsiveMenu\n          menuOpenButton={\n            <NavbarButton color1=\"black\" color2=\"white\" itemVisible>\n              <Dehaze />\n            </NavbarButton>\n          }\n          menuCloseButton={\n            <NavbarButton\n              id=\"close-menu-button\"\n              color1=\"white\"\n              color2=\"black\"\n              itemVisible\n            >\n              <Dehaze />\n            </NavbarButton>\n          }\n          changeMenuOn=\"1024px\"\n          largeMenuClassName=\"large-menu\"\n          smallMenuClassName=\"small-menu\"\n          menu={\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              {getHomeSubMenu(\n                this.navItems,\n                this.state.activePage,\n                this.setSubMenu,\n                this.state.activeSubElement,\n                this.closeMenuButton\n              )}\n            </Grid>\n          }\n        />\n      </div>\n    );\n  }\n}\n\n// Setup redux global state\nconst mapStateToProps = (state) => ({\n  page: state.nav.page,\n  subMenu: state.nav.subMenu,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setPage: (page) => {\n    dispatch({\n      type: \"SET_PAGE\",\n      payload: page,\n    });\n  },\n  setSubMenu: (subMenu) => {\n    dispatch({\n      type: \"SET_SUB_MENU\",\n      payload: subMenu,\n    });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from \"react\";\n\n// Inline footer style\nconst style = {\n  background: \"#450611 0% 0% no-repeat padding-box\",\n  minHeight: \"6rem\",\n  textAlign: \"left\",\n  paddingLeft: \"10%\",\n  paddingRight: \"10%\",\n  display: \"flex\",\n  alignItems: \"center\",\n};\nconst { innerWidth: width } = window;\n\n// Inline text style\nconst styleText = {\n  color: \"white\",\n  fontSize: 16,\n  textTransform: \"uppercase\",\n  marginLeft: 20,\n  display: width >= 800 ? \"inline\" : \"none\",\n};\n\nconst container = {};\n\nconst rightContainer = {\n  width: \"100%\",\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n};\n\n// Create footer\nconst Footer = () => (\n  <div>\n    <div className=\"footer\" style={style}>\n      <div style={container}>\n        <a\n          href=\"https://hive.io\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          style={{ textDecoration: \"none\" }}\n        >\n          <img\n            src=\"img/footer/powered_hive.png\"\n            alt=\"Powered by Hive\"\n            style={{ height: width > 600 ? 60 : 40 }}\n          />\n        </a>\n      </div>\n      <div style={rightContainer}>\n        <a\n          href=\"https://github.com/hive-keychain\"\n          target=\"_blank\"\n          style={{ textDecoration: \"none\" }}\n          rel=\"noreferrer\"\n        >\n          <span style={{ marginRight: \"10vw\" }}>\n            <img\n              src=\"img/footer/github.svg\"\n              alt=\"Github\"\n              style={{ verticalAlign: \"middle\" }}\n            />\n            <span style={styleText}>Visit our Github</span>\n          </span>\n        </a>\n        <a href=\"https://peakd.com/@keychain\" target=\"_blank\" rel=\"noreferrer\">\n          <span>\n            <img\n              src=\"img/footer/see_on_hive.svg\"\n              alt=\"Hive\"\n              style={{ verticalAlign: \"middle\" }}\n            />\n            <span style={styleText}>Follow us on Hive</span>\n          </span>\n        </a>\n      </div>\n    </div>\n    <div\n      style={{\n        width: \"100%\",\n        background: \"#450611 0% 0% no-repeat padding-box\",\n        color: \"white\",\n        textAlign: \"center\",\n        fontSize: 12,\n        paddingBottom: 5,\n      }}\n    >\n      ©2022 Hive Keychain Ltd\n    </div>\n  </div>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core/\";\nimport \"../../css/containers/section.css\";\n\n// Create section\nconst Section = ({\n  title,\n  tag,\n  background,\n  direction,\n  children,\n  marginBottom,\n  style,\n}) => {\n  // Here we defined inline styles inside the component because we want to use props as attributes\n  const titleStyle = {\n    color: \"white\",\n    textTransform: \"uppercase\",\n    fontSize: \"2rem\",\n    fontFamily: \"Montserrat\",\n    fontWeight: \"600\",\n    margin: \"0px\",\n    marginBottom: \"3.5rem\",\n  };\n  const styled = {\n    background: background,\n    marginBottom: marginBottom || 0,\n    padding: \"4rem 2.5rem\",\n  };\n\n  // Rendering component\n  return (\n    <div className=\"section\" style={{ ...styled, ...style }}>\n      <p id={tag} style={titleStyle}>\n        {title}\n      </p>\n      <Grid\n        container\n        direction={direction || \"row\"}\n        justify=\"space-evenly\"\n        alignItems=\"center\"\n        spacing={24}\n      >\n        {children}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nconst styled = {\n  padding: \"50px 0\",\n};\n\nconst titleStyle = {\n  color: \"white\",\n  textTransform: \"uppercase\",\n  fontSize: \"2rem\",\n  fontFamily: \"Montserrat\",\n  fontWeight: \"600\",\n  margin: \"0px\",\n  marginBottom: \"3.5rem\",\n};\n\n// Create component. Carousel section is a section which contain as main element a carousel\n// Content of the carousel are defined in the children property\nconst CarouselSection = ({ title, tag, children, style }) => (\n  <div className=\"section carousel-section\" style={{ ...styled, ...style }}>\n    <p id={tag} style={titleStyle}>\n      {title}\n    </p>\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n      {children}\n    </Grid>\n  </div>\n);\n\nexport default CarouselSection;\n","import { Grid } from \"@material-ui/core/\";\nimport Parser from \"html-react-parser\";\nimport React from \"react\";\n\nconst width = window.innerWidth;\n// Inline style for avatar\nconst imgStyle = {\n  maxHeight: width > 600 ? \"15rem\" : \"8rem\",\n  borderRadius: \"0 10px 10px 10px\",\n  marginBottom: \"1rem\",\n};\n\n// Inline style for name label\nconst nameStyle = {\n  fontSize: width > 600 ? \"1.25rem\" : \"1rem\",\n  fontWeight: \"600\",\n  color: \"lightgrey\",\n  textDecoration: \"none\",\n  fontFamily: \"Roboto, sans-serif\",\n  textTransform: \"uppercase\",\n};\n\n// Inline style for username label\nconst usernameStyle = {\n  fontSize: width > 600 ? \"1.25rem\" : \"1rem\",\n  fontWeight: \"600\",\n  color: \"white\",\n  textDecoration: \"none\",\n};\n\n// Inline style for position label\nconst positionStyle = {\n  fontSize: width > 600 ? \"1rem\" : \"0.75rem\",\n  fontWeight: \"300\",\n  color: \"lightgrey\",\n  marginBottom: width > 600 ? 0 : 20,\n};\n\n// Create member panel. This component is used to describe members of SteemPlus team\nconst MemberPanel = ({ name, position, username }) => (\n  <Grid\n    className=\"memberPanel\"\n    item\n    xs={6}\n    sm={6}\n    md={2}\n    lg={2}\n    container\n    direction=\"column\"\n    justify=\"space-evenly\"\n    alignItems=\"center\"\n  >\n    <img\n      style={imgStyle}\n      className=\"imgMember\"\n      src={`https://images.hive.blog/u/${username}/avatar`}\n      alt={name}\n    />\n\n    <span style={nameStyle}>{name}</span>\n    <a\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n      href={`https://peakd.com/@${username}`}\n      style={usernameStyle}\n    >\n      @{username}\n    </a>\n    <span style={positionStyle}>{Parser(position)}</span>\n  </Grid>\n);\n\nexport default MemberPanel;\n","import React from \"react\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nimport { Grid, Button, Hidden } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\n\n// Define inline style for the buttons\nconst buttonStyle = {\n  root: {\n    background: \"#0000006b\",\n    border: \"none\",\n    boxShadow: \"none\",\n    color: \"lightgrey\",\n    \"&:hover\": {\n      background: \"lightgrey\",\n      color: \"white\",\n    },\n  },\n};\nconst ArrowButton = withStyles(buttonStyle)(Button);\n\n// Create component custom carousel\nclass CustomCarousel extends React.Component {\n  constructor(props) {\n    super(props);\n    // Gert props\n    // Nb elements on the row\n    this.nbElem = props.nbElem;\n    this.autoPlay = props.autoPlay;\n    this.selectedItem = props.selectedItem;\n    // Sixe of the carousel\n    this.sizeElement = props.sizeElement;\n    // Init local state\n    this.state = { selectedFeature: props.selectedItem };\n    this.Carousel = React.createRef();\n  }\n\n  // When component is updated\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedItem !== this.props.selectedItem)\n      this.setState({ selectedFeature: this.props.selectedItem });\n  }\n\n  // Render component\n  render() {\n    return (\n      <Grid item xs={12} sm={10} md={8} lg={this.sizeElement}>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          {/* If screen is too small, hide prev button */}\n          <Hidden only=\"xs\">\n            <Grid key={`prev`} sm={1} item>\n              <ArrowButton\n                variant=\"fab\"\n                aria-label=\"Prev\"\n                onClick={() => this.Carousel.current.slidePrev()}\n              >\n                <KeyboardArrowLeft />\n              </ArrowButton>\n            </Grid>\n          </Hidden>\n\n          <Grid key={`car`} xs={12} md={8} item>\n            {/* Create carousel */}\n            <AliceCarousel\n              dotsDisabled={true}\n              autoPlay={this.autoPlay}\n              stopAutoPlayOnHover={true}\n              duration={500}\n              infinite={true}\n              autoPlayInterval={5000}\n              startIndex={this.state.selectedFeature}\n              // Nb items displayed also depend on the size of the screen\n              responsive={{\n                0: {\n                  items: 1,\n                },\n                1350: {\n                  items: this.nbElem,\n                },\n              }}\n              buttonsDisabled={true}\n              ref={this.Carousel}\n            >\n              {this.props.children}\n            </AliceCarousel>\n          </Grid>\n          {/* If screen too small, hide next button */}\n          <Hidden only=\"xs\">\n            <Grid key={`next`} sm={1} item>\n              <ArrowButton\n                variant=\"fab\"\n                aria-label=\"Next\"\n                onClick={() => this.Carousel.current.slideNext()}\n              >\n                <KeyboardArrowRight />\n              </ArrowButton>\n            </Grid>\n          </Hidden>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default CustomCarousel;\n","import React from \"react\";\nimport Section from \"./sections/section\";\nimport CarouselSection from \"./sections/carouselSection\";\nimport MemberPanel from \"../components/memberPanel\";\nimport { Grid } from \"@material-ui/core\";\nimport CustomCarousel from \"../components/carousel/customCarousel\";\nimport * as Data from \"../jsons/data.json\";\nimport * as Formatter from \"../utils/formatter\";\nimport Parser from \"html-react-parser\";\nimport { connect } from \"react-redux\";\n\n// const styleFeatureItem = {\n//   backgroundColor: \"rgba(33, 73, 108, 0.8)\",\n//   background: Const.BACKGROUND_FEATURE_COLOR_OPACITY,\n//   zIndex: 1,\n//   padding: \"1.5rem\",\n//   borderRadius: \"33px\",\n//   marginTop: \"1.5rem\",\n//   fontFamily: \"Roboto, sans-serif\",\n//   color: \"white\",\n// };\n\nconst width = window.innerWidth;\n\nconst styleIconBrowser = {\n  height: width > 600 ? \"70px\" : \"50px\",\n  marginBottom: width > 600 ? \"1rem\" : \"0.2rem\",\n};\n\nconst styleContactUsText = {\n  color: \"white\",\n  fontSize: 18,\n};\n\nconst Content = ({ activeFeature }) => (\n  <div>\n    {/* create section why steemplus */}\n    <Section\n      title={Data.whySteemPlus.sectionTitle}\n      tag={Formatter.tagFromTitle(Data.whySteemPlus.sectionTitle)}\n      background=\"transparent url('img/bg_grey.png') 50% 50%\"\n    >\n      <div style={{ width: width > 600 ? \"50%\" : \"100%\", margin: 0 }}>\n        {Data.whySteemPlus.data.map((why, i) => (\n          <p\n            style={{\n              font: \"normal normal normal 22px\",\n              color: \"white\",\n              textAlign: \"left\",\n            }}\n          >\n            {why}\n          </p>\n        ))}\n      </div>\n      <div>\n        <img src=\"img/why_hive.svg\" alt=\"hive\" />\n      </div>\n    </Section>\n    {/* create feature section */}\n    {/* <ImageSection\n      title={Data.features.sectionTitle}\n      tag={Formatter.tagFromTitle(Data.features.sectionTitle)}\n      src={\"bg_features.png\"}\n      justify={\"flex-start\"}\n    >\n      <CustomCarousel\n        autoPlay={true}\n        background={Const.BACKGROUND_FEATURE_COLOR}\n        selectedItem={activeFeature}\n        nbElem={1}\n        sizeElement={6}\n      >\n        {Data.features.data.map((feature, i) => (\n          <div\n            key={i}\n            className=\"my-slide secondary complex\"\n            style={styleFeatureItem}\n          >\n            <h2>\n              {feature.title}\n              {feature.platforms.map((p, i) => (\n                <img\n                  key={i}\n                  src={`img/platforms/${p}`}\n                  alt={p}\n                  style={styleIconPlatform}\n                />\n              ))}\n            </h2>\n            <h3>{feature.content}</h3>\n            <a\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href={feature.url}\n              style={{ textDecoration: \"none\" }}\n            >\n              <CustomButton\n                text=\"Read Article\"\n                color1={Const.TITLE_COLOR}\n                color2=\"white\"\n              />\n            </a>\n          </div>\n        ))}\n      </CustomCarousel>\n    </ImageSection> */}\n    {/* create where section */}\n    <Section\n      title={Data.where.sectionTitle}\n      tag={Formatter.tagFromTitle(Data.where.sectionTitle)}\n      background=\"black\"\n    >\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        {Data.where.browsers.map((browser, i) => (\n          <Grid\n            item\n            xs={6}\n            sm={4}\n            md={4}\n            lg={2}\n            style={{ margin: width > 600 ? \"50px 0px\" : \"0\" }}\n            key={i}\n          >\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n              className=\"browser-item\"\n            >\n              <div>\n                <a href={browser.url} target=\"_blank\" rel=\"noreferrer\">\n                  <img\n                    src={`img/browsers/${browser.icon}.svg`}\n                    alt={browser.name}\n                    style={styleIconBrowser}\n                  />\n                </a>\n                {browser.name && (\n                  <div\n                    style={{\n                      color: \"#B5B5B5\",\n                      fontSize: 20,\n                      textTransform: \"uppercase\",\n                      textDecoration: \"none\",\n                    }}\n                  >\n                    {browser.name}\n                  </div>\n                )}\n              </div>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </Section>\n    {/* create screenshots section */}\n    <CarouselSection\n      title={Data.screenshots.sectionTitle}\n      tag={Formatter.tagFromTitle(Data.screenshots.sectionTitle)}\n      style={{ background: \"linear-gradient(0.125turn,#17181c, #2d3337)\" }}\n    >\n      <CustomCarousel autoPlay={true} nbElem={3} sizeElement={12}>\n        <div>\n          <img\n            height={width > 600 ? 600 : 400}\n            src=\"img/screenshots/1.png\"\n            alt=\"Intro\"\n          />\n        </div>\n        <div>\n          <img\n            height={width > 600 ? 600 : 400}\n            src=\"img/screenshots/2.png\"\n            alt=\"Intro\"\n          />\n        </div>\n        <div>\n          <img\n            height={width > 600 ? 600 : 400}\n            src=\"img/screenshots/3.png\"\n            alt=\"Intro\"\n          />\n        </div>\n        <div>\n          <img\n            height={width > 600 ? 600 : 400}\n            src=\"img/screenshots/4.png\"\n            alt=\"Intro\"\n          />\n        </div>\n        <div>\n          <img\n            height={width > 600 ? 600 : 400}\n            src=\"img/screenshots/5.png\"\n            alt=\"Intro\"\n          />\n        </div>\n        <div>\n          <img\n            height={width > 600 ? 600 : 400}\n            src=\"img/screenshots/6.png\"\n            alt=\"Intro\"\n          />\n        </div>\n        <div>\n          <img\n            height={width > 600 ? 600 : 400}\n            src=\"img/screenshots/7.png\"\n            alt=\"Intro\"\n          />\n        </div>\n        <div>\n          <img\n            height={width > 600 ? 600 : 400}\n            src=\"img/screenshots/8.png\"\n            alt=\"Intro\"\n          />\n        </div>\n      </CustomCarousel>\n    </CarouselSection>\n    {/* create review section */}\n    {/* <CarouselSection\n      title={Data.reviews.sectionTitle}\n      tag={Formatter.tagFromTitle(Data.reviews.sectionTitle)}\n    >\n      <CustomCarousel\n        className=\"reviews\"\n        autoPlay={true}\n        nbElem={3}\n        sizeElement={12}\n      >\n        {Arrays.shuffle(Data.reviews.data).map((review, i) => (\n          <ReviewPanel\n            review={Parser(review.review)}\n            username={review.username}\n            key={i}\n          />\n        ))}\n      </CustomCarousel>\n    </CarouselSection> */}\n    {/* create members section */}\n    <Section\n      title={Data.members.sectionTitle}\n      tag={Formatter.tagFromTitle(Data.members.sectionTitle)}\n      style={{ background: \"black\" }}\n    >\n      {Data.members.data.map((members, i) => (\n        <MemberPanel\n          name={members.name}\n          position={members.position}\n          username={members.username}\n          key={i}\n        />\n      ))}\n    </Section>\n    <Section\n      title={Data.contactUs.sectionTitle}\n      tag={Formatter.tagFromTitle(Data.contactUs.sectionTitle)}\n      background=\"transparent url('img/bg_grey.png') 50% 50%\"\n      padding=\"2rem\"\n      direction=\"column\"\n      marginBottom=\"0\"\n    >\n      <p style={styleContactUsText}>\n        {Parser(Data.contactUs.data.description)}\n      </p>\n      <p style={styleContactUsText}>Join our Discord!</p>\n      <a href=\"https://discord.gg/3EM6YfRrGv\">\n        <img\n          alt=\"discord\"\n          src=\"img/discord.png\"\n          style={{ height: 100, cursor: \"pointer\" }}\n        />\n      </a>\n    </Section>\n  </div>\n);\n\n// Setup redux\n\nconst mapStateToProps = (state) => {\n  return {\n    activeFeature: state.nav.activeFeature,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);\n","import React from \"react\";\n\n// Create banner component\nconst Banner = () => {\n  const width = window.innerWidth;\n  const styles = {\n    container: { position: \"relative\" },\n    banner: {\n      width: \"100%\",\n      height: width > 600 ? 400 : 200,\n      background: \"url(img/banner.png) 100% 100%\",\n    },\n    title: {\n      position: \"relative\",\n      top: width > 600 ? 200 : 100,\n      transform: \"translateY(-50%)\",\n      maxWidth: \"50%\",\n    },\n  };\n  return (\n    <div style={styles.container}>\n      <div id=\"banner\" style={styles.banner}>\n        <img\n          id=\"title\"\n          style={styles.title}\n          src=\"img/title.svg\"\n          alt=\"Keychain\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React, { Component } from \"react\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport \"../css/containers/App.css\";\nimport Content from \"./content\";\nimport Banner from \"../components/banner\";\n\nimport { connect } from \"react-redux\";\n\n// Create app component\nclass App extends Component {\n  // Render component\n  render() {\n    // Content depend on page\n    let content = null;\n    switch (this.props.page) {\n      case \"main\":\n        content = <Content />;\n        break;\n\n      default:\n        content = <Content />;\n    }\n    // Display app\n    return (\n      <div className=\"App\">\n        <Banner />\n        <Header />\n        {content}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  page: state.nav.page,\n});\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport WebFont from \"webfontloader\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\n\n// Font loader\nWebFont.load({\n  google: {\n    families: [\"Roboto:300\", \"Montserrat\"]\n  }\n});\n\n// Create reducer for redux\nconst navReducer = (\n  state = {\n    page: \"main\",\n    activeFeature: 0,\n    subMenu: \"why-steemplus-?\"\n  },\n  action\n) => {\n  switch (action.type) {\n    case \"SET_PAGE\":\n      state = {\n        ...state,\n        page: action.payload\n      };\n      break;\n    case \"SET_ACTIVE_FEATURE\":\n      state = {\n        ...state,\n        activeFeature: action.payload\n      };\n      break;\n    case \"SET_SUB_MENU\":\n      state = {\n        ...state,\n        subMenu: action.payload\n      };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\n// Create store for redux\nconst store = createStore(\n  combineReducers({ nav: navReducer }),\n  {},\n  applyMiddleware(logger)\n);\n\n// Render App\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}